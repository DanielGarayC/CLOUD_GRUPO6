# Este archivo YA se carga dentro de http { } por el Nginx base

server {
    listen 80;

    # CORS - Se aceptan peticiones de cualquier origen
    # En producción deberíamos limitarlo a de donde proviene el frontend
    add_header Access-Control-Allow-Origin * always;
    # Se acepta contenido JSON y autorización en el header
    add_header Access-Control-Allow-Headers Authorization,Content-Type always;
    # Se aceptan métodos HTTP comunes
    add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,OPTIONS always;

    # Cabeceras para que el backend sepa quién hace la petición
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    
    location /api/auth/ {
        proxy_pass http://auth:8080/;
    }

    
    location = /_auth_check {
        internal;
        proxy_pass http://auth:8080/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header Authorization $http_authorization;
        proxy_set_header X-Original-URI $request_uri;
    }

    
    
    location /api/slices/ {
        #auth_request /_auth_check;
        proxy_pass http://slice-manager:8000/; 
    }
    #
    # location /api/userService/ {
    #     auth_request /_auth_check;
    #     proxy_pass http://userService:5002/; 
    # }
    #
    location /api/monitoring/ {
        auth_request /_auth_check;
        proxy_pass http://monitoring_service:5010/;
    }

    location /api/network/ {
        #auth_request /_auth_check;
        proxy_pass http://network_manager:8100/;
    }

    # Pruebita wowowo
    location /api/test/ {
        # 1. Primero, verifica el token con el servicio de autenticación
        auth_request /_auth_check;

        # 2. Si el token es válido, redirige la petición al servicio de prueba
        proxy_pass http://test_service:4000/; 
    }
    

    # Manejo de errores de autorización
    error_page 401 403 = @auth_error;
    location @auth_error { 
        return 401 "No autorizado"; 
    }
}
